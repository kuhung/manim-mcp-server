[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "manim-mcp-server"
version = "0.1.0"
description = "MCP server for executing Manim animation code and returning generated videos"
authors = [
    {name = "abhiemj", email = "abhiemj@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
keywords = ["mcp", "manim", "animation", "model-context-protocol"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",

    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "mcp>=1.0.0",
    "manim>=0.17.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/abhiemj/manim-mcp-server"
Repository = "https://github.com/abhiemj/manim-mcp-server"
Issues = "https://github.com/abhiemj/manim-mcp-server/issues"

[project.scripts]
manim-mcp-server = "src.server:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[tool.uv.sources]
# 可以在这里指定特定包的源，例如：
# manim = { git = "https://github.com/ManimCommunity/manim.git" }

[tool.uv.workspace]
# 如果这是一个工作区的一部分
members = ["."] 